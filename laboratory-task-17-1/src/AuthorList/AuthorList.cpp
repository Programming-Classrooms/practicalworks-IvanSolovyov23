#include "AuthorList.hpp"


/*=============================================================*/
/*====================== Конструкторы =========================*/
/*=============================================================*/

// Конструктор с параметрами
AuthorList::AuthorList(std::set<Author>& initAuthors) : authors(initAuthors) {}




/*=============================================================*/
/*======================== Геттеры ============================*/
/*=============================================================*/

// Возвращаем количество авторов мспользуя .size()
std::optional<size_t> AuthorList::getCountAuthorInList() const {
    return this->authors.size();
}

// Возвращаем авторов
std::set<Author> AuthorList::getAuthors() const {
    return this->authors;
}





/*=============================================================*/
/*=========== Методы для работы со списком авторов ============*/
/*=============================================================*/

// Добавление автора с помощью метода .insert()
void AuthorList::addAuthor(const Author& rhs) {
    authors.insert(rhs);
}

// Удаление автора с помощью метода .erase()
void AuthorList::deleteAuthor(const Author& rhs) {
    authors.erase(rhs);
}




/*=============================================================*/
/*===================== Оператор вывода =======================*/
/*=============================================================*/

//Оператор вывода
std::ostream& operator<<(std::ostream& os, const AuthorList& rhs) {
    for (const auto& author : rhs.authors) {
        os << author << " ";
    }
    return os;
}
