#include "Library.hpp"


/*=============================================================*/
/*====================== Конструктор ==========================*/
/*=============================================================*/

// Конструктор с параметром
Library::Library(std::set<Book>& initBooks) : Books(initBooks)
{}




/*==============================================================*/
/*========================= Геттер =============================*/
/*==============================================================*/

// Получаем книгу
std::set<Book> Library::getBook() const {
    return this->Books;
}

/*===============================================================*/
/*============= Метод добавления/удаления автора ================*/
/*===============================================================*/

// Добавление автора
void Library::addBook(const Book& rhs)
{
    Books.insert(rhs);
}

// Удаление автора
void Library::deleteBook(const Book& rhs)
{
    Books.erase(rhs);
}




/*===============================================================*/
/*=========== Методы нахождения книги по названию ===============*/
/*===============================================================*/

void Library::searchTitle(const std::string& rhs)
{
    bool find = false;
    for (auto& n : Books)
    {
        if (n.getTitle() == rhs) {
            find = true;
            std::cout << n << "\n";
        }
    }
    if (!find) {
        std::cout << "\nTitle of book " << rhs << " not found\n";
    }
}



/*================================================================================*/
/*====================== Перегрузка оператора вывода в поток =====================*/
/*================================================================================*/

std::ostream& operator<<(std::ostream& os, const Library& library)
{
    for (auto& book : library.getBook()) {
        os << "\nUDC: " << book.getUDK();
        os << "\nAuthors: " << book.getAuthors();
        os << "\nTitle: " << book.getTitle();
        os << "\nYear of publish: " << book.getYear();
    }
    return os;
}